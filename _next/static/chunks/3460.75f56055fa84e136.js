"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3460],{3460:function(e,n,t){t.r(n),t.d(n,{default:function(){return xe}});var r=t(5893),i=t(7294),o=t(8520),a=t.n(o),s=t(1297),l=t(7498),u=t(4565);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function g(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){c(e,n,t[n])}))}return e}function d(e){return e.map((function(e){return g({},e,{relatedInformation:e.relatedInformation?e.relatedInformation.map((function(e){return g({},e,{resource:s.Uri.parse(e.resource)})})):void 0})}))}var p,f=[];function m(e,n,t){n.isDisposed()||e.getModel()!==n||(p||(p=document.createElement("style"),document.head.appendChild(p)),p.innerHTML=t.map((function(e,n){var t=e.color;return"\n        ._color-block-".concat(n,"::before {\n          content: ' ';\n          box-sizing: border-box;\n          display: inline-block;\n          width: 0.8em;\n          height: 0.8em;\n          margin: 0.1em 0.2em 0;\n          border: 0.1em solid black;\n          background-color: rgba(").concat(255*t.red,", ").concat(255*t.green,", ").concat(255*t.blue,", ").concat(t.alpha,");\n        }\n        .vs-dark ._color-block-").concat(n,"::before {\n          border-color: rgb(238, 238, 238);\n        }\n      ")})).join(""),f=e.deltaDecorations(f,t.map((function(e,n){return{range:e.range,options:{beforeContentClassName:"_color-block-".concat(n)}}}))))}var v=t(296),b=t(701),y=t(412);function h(e,n,t,r,i,o,a){try{var s=e[o](a),l=s.value}catch(u){return void t(u)}s.done?n(l):Promise.resolve(l).then(r,i)}function T(e){return function(){var n=this,t=arguments;return new Promise((function(r,i){var o=e.apply(n,t);function a(e){h(o,r,i,a,s,"next",e)}function s(e){h(o,r,i,a,s,"throw",e)}a(void 0)}))}}function R(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function C(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){R(e,n,t[n])}))}return e}function x(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var k=function(e,n){return"${".concat(e).concat(n?":"+n:"","}")};function P(e,n){var t="css"===e?"stylesheet":"markup",r=n?n.split(",").map((function(e){return e.trim()})):[],i=r.includes("bem"),o=r.includes("c");return{type:t,options:{"output.formatSkip":["html"],"output.formatForce":["body"],"output.field":k,"output.inlineBreak":0,"output.compactBoolean":!1,"output.reverseAttributes":!1,"markup.href":!0,"comment.enabled":o,"comment.trigger":["id","class"],"comment.before":"","comment.after":"\n\x3c!-- /[#ID][.CLASS] --\x3e","bem.enabled":i,"bem.element":"__","bem.modifier":"_","jsx.enabled":"jsx"===e,"stylesheet.shortHex":!0,"stylesheet.between":"stylus"===e?" ":": ","stylesheet.after":"sass"===e||"stylus"===e?"":";","stylesheet.intUnit":"px","stylesheet.floatUnit":"em","stylesheet.unitAliases":{e:"em",p:"%",x:"ex",r:"rem"},"stylesheet.fuzzySearchMinScore":.3,"output.format":!0,"output.selfClosingStyle":"html"},variables:{},snippets:{},syntax:e,text:void 0,maxRepeat:1e3}}var V="bem",w="t",K="c";function S(e,n){for(var t,r=void 0===n?e.length:n,i=0;i<3;i++)if(e.endsWith("".concat("|").concat(V),r))r-=V.length+1,t=t?"bem,"+t:V;else if(e.endsWith("".concat("|").concat(K),r))r-=K.length+1,t=t?"c,"+t:K;else{if(!e.endsWith("".concat("|").concat(w),r))break;r-=w.length+1,t=t?"t,"+t:w}return t}var O=t(8701),D=t(5532);function M(e,n,t,r,i,o,a){try{var s=e[o](a),l=s.value}catch(u){return void t(u)}s.done?n(l):Promise.resolve(l).then(r,i)}function I(e){return function(){var n=this,t=arguments;return new Promise((function(r,i){var o=e.apply(n,t);function a(e){M(o,r,i,a,s,"next",e)}function s(e){M(o,r,i,a,s,"throw",e)}a(void 0)}))}}var E=Object.keys(O.R),j="file:///HTML";function N(e,n,t,r){var i,o=[];o.push(function(e){var n=s.languages.registerCompletionItemProvider;s.languages.registerCompletionItemProvider=function(t,r){var i=r.triggerCharacters,o=r.provideCompletionItems;return n(t,{triggerCharacters:x(i).concat(["/"],x("0123456789".split(""))),provideCompletionItems:T(a().mark((function n(t,r){var i,s,u,c,g,d,p;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(i=o(t,r)){n.next=3;break}return n.abrupt("return",i);case 3:if(!((s=i.suggestions.map((function(e){var n=e.label.replace(/(\d+)\/(\d+)/g,"$1EMMETSLASH$2").replace(/(\d+)\.(\d+(?:[^a-z0-9]|$))/gi,"$1EMMETDOT$2"),t=S(n);if(t&&(n=n.substr(0,n.length-t.length-1)),/EMMET(SLASH|DOT)/.test(n)){var r=(0,y.ZP)(n,P("html",t)).replace(/EMMETSLASH/g,"/").replace(/EMMETDOT/g,".");e.insertText=r,e.documentation=r.replace(/([^\\])\$\{\d+\}/g,"$1|").replace(/\$\{\d+:([^\}]+)\}/g,"$1")}return e}))).length>0&&e)){n.next=13;break}if(u={startLineNumber:r.lineNumber,startColumn:1,endLineNumber:r.lineNumber,endColumn:r.column},!(c=t.getValueInRange(u)).includes(".")){n.next=13;break}return g=c.replace(/(\d+)\.($|\d+(?:[^a-z0-9]|$))/gi,"$1__DOT__$2").split(".").pop().replace(/__DOT__/g,"."),n.next=11,(0,l.L)(e,{lsp:{type:"completeString",text:g,language:"html",uri:j,range:C({},u,{startColumn:u.endColumn-g.length})}});case 11:(d=n.sent.result)&&(p=s).push.apply(p,x(d.suggestions.map((function(e){return C({},e,{command:{id:"editor.action.triggerSuggest",title:""}})}))));case 13:return n.abrupt("return",C({},i,{suggestions:s}));case 14:case"end":return n.stop()}}),n)}))),resolveCompletionItem:function(n,t,r,i){return T(a().mark((function n(){var t;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if("Emmet abbreviation"!==r.detail){n.next=2;break}return n.abrupt("return",r);case 2:return n.next=4,(0,l.L)(e,{lsp:{type:"resolveCompletionItem",item:r}});case 4:return t=n.sent.result,n.abrupt("return",t);case 6:case"end":return n.stop()}}),n)})))()}})};var t=(0,b.hw)(s);return s.languages.registerCompletionItemProvider=n,t}(t.current)),o.push(s.languages.registerCompletionItemProvider("html",{triggerCharacters:[" ",'"',":","!","/"],provideCompletionItems:function(e,n,r){var i=I(a().mark((function e(n,r,i){var o;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.current){e.next=2;break}return e.abrupt("return",{suggestions:[]});case 2:return e.next=4,(0,l.L)(t.current,{lsp:{type:"complete",text:n.getValue(),language:"html",uri:j,position:r,context:i}});case 4:return o=e.sent.result,e.abrupt("return",o||{suggestions:[]});case 6:case"end":return e.stop()}}),e)})));return function(){return i.apply(this,arguments)}}(),resolveCompletionItem:function(e,i){return I(a().mark((function i(){var o,s,u,c,g,d,p;return a().wrap((function(i){for(;;)switch(i.prev=i.next){case 0:for(o=r().getModel(),s=r().getSelections(),u=o.getValue().split("\n"),c=0;c<s.length;c++)g=s[c].positionLineNumber-1,u[g]=u[g].substr(0,e.range.startColumn-1)+e.label+u[g].substr(s[c].positionColumn-1);if(n(u.join("\n"),{transient:!0}),e._resolved){i.next=10;break}return i.next=8,(0,l.L)(t.current,{lsp:{type:"resolveCompletionItem",item:e}});case 8:d=i.sent.result,Object.assign(e,d,{_resolved:!0});case 10:throw(p=new Error("Canceled")).name=p.message,p;case 13:case"end":return i.stop()}}),i)})))()}})),o.push(s.languages.registerHoverProvider("html",{provideHover:I(a().mark((function e(n,r){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,l.L)(t.current,{lsp:{type:"hover",text:n.getValue(),language:"html",uri:j,position:r}});case 2:return i=e.sent.result,e.abrupt("return",i);case 4:case"end":return e.stop()}}),e)})))})),o.push({dispose:function(){i&&i.dispose()}});var u,c=s.editor.createModel(e||"","html",s.Uri.parse(j));c.updateOptions({indentSize:2,tabSize:2}),o.push(c),function e(){var t=r();if(t&&t._contentWidgets["editor.widget.suggestWidget"]){var i=!1,a=t._contentWidgets["editor.widget.suggestWidget"].widget._widget;o.push(a.onDidShow((function(){i=!0;var e=a.element.domNode,n=a._details.widget.domNode,t=new MutationObserver((function(){e.style.top===n.parentNode.style.top?(n.parentNode.style.marginTop="0",parseInt(e.style.left,10)>parseInt(n.parentNode.style.left,10)?(n.parentNode.style.marginLeft="0",n.parentNode.style.marginRight="8px"):(n.parentNode.style.marginLeft="8px",n.parentNode.style.marginRight="0")):(n.parentNode.style.marginTop="8px",n.parentNode.style.marginLeft="0",n.parentNode.style.marginRight="0")}));t.observe(n.parentNode,{attributes:!0,attributeFilter:["style"]}),o.push({dispose:function(){t.disconnect()}})}))),o.push(t._contentWidgets["editor.widget.suggestWidget"].widget._widget.onDidHide((function(){setTimeout((function(){return i=!1}),0),t.getModel()===c&&n()}))),o.push(t.onDidChangeModel((function(e){var t=e.oldModelUrl;i&&t.toString()===j&&n()})))}else u=window.setTimeout(e,10)}(),o.push({dispose:function(){window.clearTimeout(u)}});var g=(0,v.debounce)(I(a().mark((function e(){var n;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i&&i.dispose(),i=s.languages.registerColorProvider("html",{provideDocumentColors:I(a().mark((function e(n){var i,o,s,u;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,l.L)(t.current,{lsp:{type:"documentColors",text:n.getValue(),language:"html",uri:j}});case 2:return i=e.sent,o=i.result,s=o.filter((function(e){var t=n.getValueInRange(e.range);return new RegExp("-\\[(".concat(E.join("|"),"|((?:#|rgba?\\(|hsla?\\())[^\\]]+)\\]$")).test(t)})),u=o.filter((function(e){return!s.includes(e)})),m(r(),n,u),e.abrupt("return",s);case 8:case"end":return e.stop()}}),e)}))),provideColorPresentations:function(e,n){var t=e.getValueInRange(n.range),r=t.match(new RegExp("-\\[(".concat(E.join("|"),"|(?:(?:#|rgba?\\(|hsla?\\())[^\\]]+)\\]$"),"i"));if(null===r)return[];var i=r[1],o=E.includes(i),a=(0,D.Z)({r:n.color.red,g:n.color.green,b:n.color.blue,a:n.color.alpha}),s=a.toHex8String(!o&&(4===i.length||5===i.length));5===s.length?s=s.replace(/f$/,""):9===s.length&&(s=s.replace(/ff$/,""));var l=t.substr(0,r.index);return[s,a.toRgbString().replace(/ /g,""),a.toHslString().replace(/ /g,"")].map((function(e){return{label:"".concat(l,"-[").concat(e,"]")}}))}}),e.next=3,(0,l.L)(t.current,{lsp:{type:"validate",text:c.getValue(),language:"html",uri:j}});case 3:if(n=e.sent.result,!c.isDisposed()){e.next=6;break}return e.abrupt("return");case 6:n?s.editor.setModelMarkers(c,"default",d(n)):s.editor.setModelMarkers(c,"default",[]);case 7:case"end":return e.stop()}}),e)}))),100);return o.push(c.onDidChangeContent((function(){n(),g()}))),{getModel:function(){return c},updateDecorations:g,activate:function(){r().setModel(c)},dispose:function(){o.forEach((function(e){return e.dispose()}))}}}var A=t(5288),_=t(605);function L(e,n,t,r,i,o,a){try{var s=e[o](a),l=s.value}catch(u){return void t(u)}s.done?n(l):Promise.resolve(l).then(r,i)}function F(e){return function(){var n=this,t=arguments;return new Promise((function(r,i){var o=e.apply(n,t);function a(e){L(o,r,i,a,s,"next",e)}function s(e){L(o,r,i,a,s,"throw",e)}a(void 0)}))}}function H(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}_.C3._languageId="tailwindcss";var W="file:///CSS",z="file:///CSS.proxy";function B(e,n,t,r){var i,o,u=[];return s.languages.register({id:"tailwindcss"}),u.push(s.languages.setMonarchTokensProvider("tailwindcss",U)),{getModel:function(){return i},updateDecorations:function(){return o()},activate:function(){if(!i){u.push(s.languages.setLanguageConfiguration("tailwindcss",$)),u.push((0,A.setupMode)(_.C3));var c=A.CompletionAdapter.prototype.provideCompletionItems;A.CompletionAdapter.prototype.provideCompletionItems=function(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];return this._provideCompletionItems||(this._provideCompletionItems=c.bind(this)),this._provideCompletionItems.apply(this,[e===i?f:e].concat(H(t)))},u.push({dispose:function(){A.CompletionAdapter.prototype.provideCompletionItems=c}});var g=A.DocumentColorAdapter.prototype.provideDocumentColors;A.DocumentColorAdapter.prototype.provideDocumentColors=function(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];return this._provideDocumentColors||(this._provideDocumentColors=g.bind(this)),this._provideDocumentColors.apply(this,[e===i?f:e].concat(H(t)))},u.push({dispose:function(){A.DocumentColorAdapter.prototype.provideDocumentColors=g}});var p=A.HoverAdapter.prototype.provideHover;A.HoverAdapter.prototype.provideHover=function(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];return this._provideHover||(this._provideHover=p.bind(this)),this._provideHover.apply(this,[e===i?f:e].concat(H(t)))},u.push({dispose:function(){A.HoverAdapter.prototype.provideHover=p}}),A.DiagnosticsAdapter.prototype._doValidate=function(e,n){this._worker(e).then((function(n){return n.doValidation(e.toString()===W?z:e.toString())})).then((function(t){var r=t.map((function(e){return function(e,n){var t="number"===typeof n.code?String(n.code):n.code;return{severity:G(n.severity),startLineNumber:n.range.start.line+1,startColumn:n.range.start.character+1,endLineNumber:n.range.end.line+1,endColumn:n.range.end.character+1,message:n.message,code:t,source:n.source}}(0,e)})),i=s.editor.getModel(e);i.getLanguageId()===n&&s.editor.setModelMarkers(i,n,r.filter((function(e){return"unknownAtRules"!==e.code||!/@(tailwind|screen|responsive|variants|layer|___)$/.test(e.message)})))})).then(void 0,(function(e){console.error(e)}))},u.push(s.languages.registerCompletionItemProvider("tailwindcss",{triggerCharacters:[" ",'"',"'","."],provideCompletionItems:function(e,n){var r=F(a().mark((function e(n,r){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.current){e.next=2;break}return e.abrupt("return",{suggestions:[]});case 2:return e.next=4,(0,l.L)(t.current,{lsp:{type:"complete",text:n.getValue(),language:"css",uri:W,position:r}});case 4:return i=e.sent.result,e.abrupt("return",i||{suggestions:[]});case 6:case"end":return e.stop()}}),e)})));return function(){return r.apply(this,arguments)}}()})),u.push(s.languages.registerHoverProvider("tailwindcss",{provideHover:F(a().mark((function e(n,r){var i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,l.L)(t.current,{lsp:{type:"hover",text:n.getValue(),language:"css",uri:W,position:r}});case 2:return i=e.sent.result,e.abrupt("return",i);case 4:case"end":return e.stop()}}),e)})))})),(i=s.editor.createModel(e||"","tailwindcss",s.Uri.parse(W))).updateOptions({indentSize:2,tabSize:2}),u.push(i);var f=s.editor.createModel(Z(e||""),"tailwindcss",z);f.updateOptions({indentSize:2,tabSize:2}),u.push(f),(o=(0,v.debounce)(F(a().mark((function e(){var n,o,u;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,l.L)(t.current,{lsp:{type:"documentColors",text:i.getValue(),language:"css",uri:W}});case 2:return n=e.sent,o=n.result,m(r(),i,o),e.next=7,(0,l.L)(t.current,{lsp:{type:"validate",text:i.getValue(),language:"css",uri:W}});case 7:if(u=e.sent.result,!i.isDisposed()){e.next=10;break}return e.abrupt("return");case 10:u?s.editor.setModelMarkers(i,"default",d(u)):s.editor.setModelMarkers(i,"default",[]);case 11:case"end":return e.stop()}}),e)}))),100))(),u.push(i.onDidChangeContent(F(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n(),f.setValue(Z(i.getValue())),o();case 3:case"end":return e.stop()}}),e)})))))}r().setModel(i)},dispose:function(){u.forEach((function(e){return e.dispose()}))}}}var $={wordPattern:/(#?-?\d*\.\d\w*%?)|((::|[@#.!:])?[\w-?]+%?)|::|[@#.!:]/g,comments:{blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}",notIn:["string","comment"]},{open:"[",close:"]",notIn:["string","comment"]},{open:"(",close:")",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string","comment"]},{open:"'",close:"'",notIn:["string","comment"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],folding:{markers:{start:new RegExp("^\\s*\\/\\*\\s*#region\\b\\s*(.*?)\\s*\\*\\/"),end:new RegExp("^\\s*\\/\\*\\s*#endregion\\b.*\\*\\/")}}},U={defaultToken:"",tokenPostfix:".css",ws:"[ \t\n\r\f]*",identifier:"-?-?([a-zA-Z]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))([\\w\\-]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))*",brackets:[{open:"{",close:"}",token:"delimiter.bracket"},{open:"[",close:"]",token:"delimiter.bracket"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"<",close:">",token:"delimiter.angle"}],tokenizer:{root:[{include:"@selector"}],selector:[{include:"@comments"},{include:"@import"},{include:"@strings"},["[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)",{token:"keyword",next:"@keyframedeclaration"}],["[@](media)",{token:"keyword",next:"@mediadeclaration"}],["[@](supports)",{token:"keyword",next:"@mediadeclaration"}],["[@](tailwind)",{token:"keyword",next:"@tailwinddirective"}],["[@](screen)",{token:"keyword",next:"@screenheader"}],["[@](variants)",{token:"keyword",next:"@variantsheader"}],["[@](responsive)",{token:"keyword",next:"@responsiveheader"}],["[@](layer)",{token:"keyword",next:"@layerheader"}],["[@](page|content|font-face|-moz-document)",{token:"keyword"}],["[@](charset|namespace)",{token:"keyword",next:"@declarationbody"}],["(url-prefix)(\\()",["attribute.value",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],["(url)(\\()",["attribute.value",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],{include:"@selectorname"},["[\\*]","tag"],["[>\\+,]","delimiter"],["\\[",{token:"delimiter.bracket",next:"@selectorattribute"}],["{",{token:"delimiter.bracket",next:"@selectorbody"}]],selectorbody:[{include:"@comments"},["--@identifier@ws(?=:(\\s|\\d|[^{;}]*[;}]))","variable","@rulevaluestart"],["[*_]?@identifier@ws(?=:(\\s|\\d|[^{;}]*[;}]))","attribute.name","@rulevaluestart"],["}",{token:"delimiter.bracket",next:"@pop"}],["[@]apply",{token:"keyword",next:"@applybody"}]],applybody:[{include:"@comments"},["!important","keyword"],[";","delimiter","@pop"]],selectorname:[["::?(@identifier)","pseudo"],["(\\.|#(?=[^{])|%|(@identifier))+","tag"],["\\\\",{token:"tag",next:"selectorescape"}]],selectorescape:[[/./,{token:"tag",next:"@pop"}]],selectorattribute:[{include:"@term"},["]",{token:"delimiter.bracket",next:"@pop"}]],term:[{include:"@comments"},["(url-prefix)(\\()",["function",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],["(url)(\\()",["function",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],["(theme)(\\()",["function",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],{include:"@functioninvocation"},{include:"@numbers"},{include:"@name"},["([<>=\\+\\-\\*\\/\\^\\|\\~,])","delimiter"],[",","delimiter"]],rulevaluestart:[[":",{token:"delimiter",switchTo:"@rulevalue"}]],rulevalue:[{include:"@comments"},{include:"@strings"},{include:"@term"},["!important","keyword"],[";","delimiter","@pop"],["(?=})",{token:"",next:"@pop"}]],warndebug:[["[@](warn|debug)",{token:"keyword",next:"@declarationbody"}]],import:[["[@](import)",{token:"keyword",next:"@declarationbody"}]],urldeclaration:[{include:"@strings"},["[^)\r\n]+","string"],["\\)",{token:"delimiter.parenthesis",next:"@pop"}]],parenthizedterm:[{include:"@term"},["\\)",{token:"delimiter.parenthesis",next:"@pop"}]],declarationbody:[{include:"@term"},[";","delimiter","@pop"],["(?=})",{token:"",next:"@pop"}]],comments:[["\\/\\*","comment","@comment"],["\\/\\/+.*","comment"]],comment:[["\\*\\/","comment","@pop"],[/[^*/]+/,"comment"],[/./,"comment"]],name:[["@identifier","attribute.value"]],numbers:[["-?(\\d*\\.)?\\d+([eE][\\-+]?\\d+)?",{token:"attribute.value.number",next:"@units"}],["#[0-9a-fA-F_]+(?!\\w)","attribute.value.hex"]],units:[["(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?","attribute.value.unit","@pop"]],keyframedeclaration:[{include:"@comments"},["@identifier","attribute.value"],["{",{token:"delimiter.bracket",switchTo:"@keyframebody"}]],mediadeclaration:[{include:"@comments"},[",",{token:"delimiter"}],["\\(",{token:"delimiter.bracket",next:"@mediaparam"}],["{",{token:"delimiter.bracket",switchTo:"@mediabody"}]],mediaparam:[{include:"@comments"},{include:"@numbers"},["@identifier@ws:","attribute.name"],["\\)","delimiter.bracket","@pop"]],mediabody:[{include:"@selector"},["}",{token:"delimiter.bracket",next:"@pop"}]],tailwinddirective:[{include:"@comments"},["@identifier","attribute.value"],[";","delimiter","@pop"]],screenheader:[{include:"@comments"},["@identifier","attribute.value"],["{",{token:"delimiter.bracket",switchTo:"@mediabody"}]],layerheader:[{include:"@comments"},["@identifier","attribute.value"],["{",{token:"delimiter.bracket",switchTo:"@mediabody"}]],variantsheader:[{include:"@comments"},["@identifier","attribute.value"],[",","delimiter"],["{",{token:"delimiter.bracket",switchTo:"@mediabody"}]],responsiveheader:[{include:"@comments"},["{",{token:"delimiter.bracket",switchTo:"@mediabody"}]],keyframebody:[{include:"@term"},["{",{token:"delimiter.bracket",next:"@selectorbody"}],["}",{token:"delimiter.bracket",next:"@pop"}]],functioninvocation:[["@identifier(?=\\()",{token:"function",next:"@functionarguments"}]],functionarguments:[["\\(","delimiter.parenthesis"],["\\$@identifier@ws:","attribute.name"],["[,]","delimiter"],{include:"@term"},{include:"@strings"},["\\)",{token:"delimiter.parenthesis",next:"@pop"}]],strings:[['~?"',{token:"string",next:"@stringenddoublequote"}],["~?'",{token:"string",next:"@stringendquote"}]],stringenddoublequote:[["\\\\.","string"],['"',{token:"string",next:"@pop"}],[/[^\\"]+/,"string"],[".","string"]],stringendquote:[["\\\\.","string"],["'",{token:"string",next:"@pop"}],[/[^\\']+/,"string"],[".","string"]]}};function G(e){switch(e){case 1:return s.MarkerSeverity.Error;case 2:return s.MarkerSeverity.Warning;case 3:return s.MarkerSeverity.Info;case 4:return s.MarkerSeverity.Hint;default:return s.MarkerSeverity.Info}}function Z(e){return e.replace(/@apply[^;}]+[;}]/g,(function(e){return"@___{}"+e.substr(6).replace(/./g,(function(e){return"}"===e?"}":" "}))})).replace(/@screen([^{]{2,})\{/g,(function(e,n){return"@media(_)".concat(" ".repeat(n.length-2),"{")})).replace(/@variants(\s[^{]+)\{/g,(function(e,n){return"@media(_)".concat(" ".repeat(n.length),"{")})).replace(/@responsive(\s*)\{/g,(function(e,n){return"@media(_)  ".concat(" ".repeat(n.length),"{")})).replace(/@layer([^{]{3,})\{/g,(function(e,n){return"@media(_)".concat(" ".repeat(n.length-3),"{")}))}var q=t(1653),Q=t(1701),J=t(778);function X(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){X(e,n,t[n])}))}return e}function ee(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var ne={1:'import * as postcss from \'postcss\'\n\ntype KeyValuePair<TKey extends keyof any = string, TValue = string> = Record<\n  TKey,\n  TValue\n>;\n\ntype ConfigUtils = {\n  negative<TInput, TOutput>(input: TInput): TOutput;\n  breakpoints<TInput, TOutput>(input: TInput): TOutput;\n};\n\ntype ConfigDotNotationPath = string;\n\ntype ResolvableTo<TResult> =\n  | TResult\n  | ((\n      theme: (path: ConfigDotNotationPath) => TResult,\n      utils: ConfigUtils\n    ) => TResult);\n\ntype BaseConfig = {\n  important: boolean | string;\n  target: "relaxed" | "ie11";\n  prefix: string | ((className: string) => string);\n  separator: string;\n};\n\ntype PurgeConfig =\n  // Disabled\n  | false\n  // Shortcut, list of content paths\n  | string[]\n  // Explicit enabled/disabled + content paths\n  | { enabled: boolean; mode: "all" | "conservative"; content: string[] }\n  // Explicit enabled/disabled + purge options\n  | { enabled: boolean; options: { content: string[]; whitelist: string[] } };\n\ntype FutureSettings =\n  | "removeDeprecatedGapUtilities"\n  | "purgeLayersByDefault"\n  | "defaultLineHeights"\n  | "standardFontWeights";\n\ntype FutureConfig = "all" | Record<FutureSettings, boolean> | FutureSettings[];\n\ntype ExperimentalSettings =\n  | "uniformColorPalette"\n  | "extendedSpacingScale"\n  | "extendedFontSizeScale"\n  | "applyComplexClasses"\n  | "darkModeVariant"\n  | "additionalBreakpoint";\n\ntype ExperimentalConfig =\n  | "all"\n  | Partial<Record<ExperimentalSettings, boolean>>\n  | ExperimentalSettings[];\n\ntype ThemeConfig = Partial<{\n  extend: Partial<Omit<ThemeConfig, "extend">>;\n\n  // Responsiveness\n  screens: ResolvableTo<KeyValuePair>;\n\n  // Reusable base configs\n  colors: ResolvableTo<\n    KeyValuePair | Record<string, Record<string | number, string>>\n  >;\n  spacing: ResolvableTo<KeyValuePair>;\n\n  // Background\n  backgroundColor: ThemeConfig["colors"];\n  backgroundImage: ResolvableTo<KeyValuePair>;\n  gradientColorStops: ThemeConfig["colors"];\n  backgroundOpacity: ThemeConfig["opacity"];\n  backgroundPosition: ResolvableTo<KeyValuePair>;\n  backgroundSize: ResolvableTo<KeyValuePair>;\n\n  // Border\n  borderColor: ThemeConfig["colors"];\n  borderOpacity: ThemeConfig["opacity"];\n  borderRadius: ResolvableTo<KeyValuePair>;\n  borderWidth: ResolvableTo<KeyValuePair>;\n\n  // Shadow\n  boxShadow: ResolvableTo<KeyValuePair>;\n\n  // Outline\n  outline: ResolvableTo<KeyValuePair>;\n\n  // Cursor\n  cursor: ResolvableTo<KeyValuePair>;\n\n  // Divider\n  divideColor: ThemeConfig["borderColor"];\n  divideOpacity: ThemeConfig["borderOpacity"];\n  devideWidth: ThemeConfig["borderWidth"];\n\n  // Svg\n  fill: ResolvableTo<KeyValuePair>;\n  stroke: ResolvableTo<KeyValuePair>;\n  strokeWidth: ResolvableTo<KeyValuePair>;\n\n  // Flexbox\n  flex: ResolvableTo<KeyValuePair>;\n  flexGrow: ResolvableTo<KeyValuePair>;\n  flexShrink: ResolvableTo<KeyValuePair>;\n\n  // Fonts\n  fontFamily: ResolvableTo<Record<string, string[]>>;\n  fontSize: ResolvableTo<KeyValuePair>;\n  fontWeight: ResolvableTo<KeyValuePair>;\n\n  // Sizes\n  height: ThemeConfig["spacing"];\n  minHeight: ResolvableTo<KeyValuePair>;\n  maxHeight: ResolvableTo<KeyValuePair>;\n  width: ThemeConfig["spacing"];\n  minWidth: ResolvableTo<KeyValuePair>;\n  maxWidth: ResolvableTo<KeyValuePair>;\n\n  // Positioning\n  inset: ResolvableTo<KeyValuePair>;\n  zIndex: ResolvableTo<KeyValuePair>;\n\n  // Text\n  letterSpacing: ResolvableTo<KeyValuePair>;\n  lineHeight: ResolvableTo<KeyValuePair>;\n  textColor: ThemeConfig["colors"];\n  textOpacity: ThemeConfig["opacity"];\n\n  // Input\n  placeholderColor: ThemeConfig["colors"];\n  placeholderOpacity: ThemeConfig["opacity"];\n\n  // Lists\n  listStyleType: ResolvableTo<KeyValuePair>;\n\n  // Layout\n  margin: ThemeConfig["spacing"];\n  padding: ThemeConfig["spacing"];\n  space: ThemeConfig["spacing"];\n  opacity: ResolvableTo<KeyValuePair>;\n  order: ResolvableTo<KeyValuePair>;\n\n  // Images\n  objectPosition: ResolvableTo<KeyValuePair>;\n\n  // Grid\n  gap: ThemeConfig["spacing"];\n  gridTemplateColumns: ResolvableTo<KeyValuePair>;\n  gridColumn: ResolvableTo<KeyValuePair>;\n  gridColumnStart: ResolvableTo<KeyValuePair>;\n  gridColumnEnd: ResolvableTo<KeyValuePair>;\n  gridTemplateRows: ResolvableTo<KeyValuePair>;\n  gridRow: ResolvableTo<KeyValuePair>;\n  gridRowStart: ResolvableTo<KeyValuePair>;\n  gridRowEnd: ResolvableTo<KeyValuePair>;\n\n  // Transformations\n  transformOrigin: ResolvableTo<KeyValuePair>;\n  scale: ResolvableTo<KeyValuePair>;\n  rotate: ResolvableTo<KeyValuePair>;\n  translate: ThemeConfig["spacing"];\n  skew: ResolvableTo<KeyValuePair>;\n\n  // Transitions\n  transitionProperty: ResolvableTo<KeyValuePair>;\n  transitionTimingFunction: ResolvableTo<KeyValuePair>;\n  transitionDuration: ResolvableTo<KeyValuePair>;\n  transitionDelay: ResolvableTo<KeyValuePair>;\n\n  // Animations\n  animation: ResolvableTo<KeyValuePair>;\n  keyframes: ResolvableTo<\n    Record<string, Record<string, KeyValuePair | string>>\n  >;\n\n  // Components\n  container: Partial<{\n    screens:\n      | string[] // List of breakpoints. E.g.: \'400px\', \'500px\'\n      // Named breakpoints. E.g.: { sm: \'400px\' }\n      | Record<string, string>\n      // Name breakpoints with explicit min and max values. E.g.: { sm: { min: \'300px\', max: \'400px\' } }\n      | Record<string, { min: string; max: string }>;\n    center: boolean;\n    padding: string | KeyValuePair;\n  }>;\n\n  // Custom\n  [key: string]: any;\n}>;\n\ntype VariantsAPI = {\n  variants: (path: string) => string[];\n  before: (toInsert: string[], variant?: string, existingPluginVariants?: string[]) => string[];\n  after: (toInsert: string[], variant?: string, existingPluginVariants?: string[]) => string[];\n  without: (toRemove: string[], existingPluginVariants?: string[]) => string[];\n}\ntype VariantsConfig = string[] | Record<string, string[] | ((api: VariantsAPI) => string[])>;\n\ntype CorePluginsConfig = string[] | Record<string, boolean>;\n\ntype VariantConfig =\n  | string[]\n  | Partial<{\n      variants: string[];\n      respectPrefix: false;\n      respectImportant: false;\n    }>;\ntype PluginAPI = {\n  // Get access to the whole config\n  config: <TDefaultValue = TailwindConfig>(\n    path?: ConfigDotNotationPath,\n    defaultValue?: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  // Escape classNames\n  e: (className: string) => string;\n  // Shortcut for the theme section of the config\n  theme: <TDefaultValue>(\n    path: ConfigDotNotationPath,\n    defaultValue: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  variants: <TDefaultValue>(\n    path: ConfigDotNotationPath,\n    defaultValue: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  target: (path: ConfigDotNotationPath) => string;\n  prefix: (selector: string) => string;\n  // Ability to add utilities. E.g.: .p-4\n  addUtilities: (\n    utilities: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n    variantConfig?: VariantConfig\n  ) => void;\n  // Ability to add components. E.g.: .btn\n  addComponents: (\n    components: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n    variantConfig?: VariantConfig\n  ) => void;\n  addBase: (\n    base: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n  ) => void;\n  addVariant: (\n    name: string,\n    generator: (api: {\n      container: postcss.Container,\n      separator: string,\n      modifySelectors: (\n        modifierFunction: (\n          api: {\n            className: string\n            selector: string\n          }\n        ) => void\n      ) => void\n    }) => void\n  ) => void;\n  corePlugins: (path: string) => boolean;\n  postcss: typeof postcss;\n};\nexport type PluginCreator = (api: PluginAPI) => void;\ntype PluginsConfig = (PluginCreator | { handler: PluginCreator, config?: TailwindConfig })[];\n\n// The holy grail Tailwind config definition\nexport type TailwindConfig = Partial<\n  BaseConfig & {\n    presets: TailwindConfig[];\n    future: FutureConfig;\n    experimental: ExperimentalConfig;\n    purge: PurgeConfig;\n    theme: ThemeConfig;\n    variants: VariantsConfig;\n    corePlugins: CorePluginsConfig;\n    plugins: PluginsConfig;\n    // Custom\n    [key: string]: any;\n  }\n>;\n',2:'import * as postcss from \'postcss\'\n\ntype KeyValuePair<TKey extends keyof any = string, TValue = string> = Record<\n  TKey,\n  TValue\n>;\n\ntype ConfigUtils = {\n  negative<TInput, TOutput>(input: TInput): TOutput;\n  breakpoints<TInput, TOutput>(input: TInput): TOutput;\n};\n\ntype ConfigDotNotationPath = string;\n\ntype ResolvableTo<TResult> =\n  | TResult\n  | ((\n      theme: (path: ConfigDotNotationPath) => TResult,\n      utils: ConfigUtils\n    ) => TResult);\n\ntype BaseConfig = {\n  important: boolean | string;\n  target: "relaxed" | "ie11";\n  prefix: string | ((className: string) => string);\n  separator: string;\n};\n\ntype PurgeConfig =\n  // Disabled\n  | false\n  // Shortcut, list of content paths\n  | string[]\n  // Explicit enabled/disabled + content paths\n  | { enabled: boolean; mode: "all" | "conservative"; content: string[] }\n  // Explicit enabled/disabled + purge options\n  | { enabled: boolean; options: { content: string[]; whitelist: string[] } };\n\ntype FutureConfig = "all" | Record<any, never> | [];\n\ntype ExperimentalConfig =\n  | "all"\n  | Record<any, never>\n  | [];\n\ntype DarkModeConfig =\n  | false\n  | "media"\n  | "class";\n\ntype ThemeConfig = Partial<{\n  extend: Partial<Omit<ThemeConfig, "extend">>;\n\n  // Responsiveness\n  screens: ResolvableTo<KeyValuePair>;\n\n  // Reusable base configs\n  colors: ResolvableTo<\n    KeyValuePair | Record<string, Record<string | number, string>>\n  >;\n  spacing: ResolvableTo<KeyValuePair>;\n\n  // Background\n  backgroundColor: ThemeConfig["colors"];\n  backgroundImage: ResolvableTo<KeyValuePair>;\n  gradientColorStops: ThemeConfig["colors"];\n  backgroundOpacity: ThemeConfig["opacity"];\n  backgroundPosition: ResolvableTo<KeyValuePair>;\n  backgroundSize: ResolvableTo<KeyValuePair>;\n  backgroundOrigin: ResolvableTo<KeyValuePair>;\n\n  // Border\n  borderColor: ThemeConfig["colors"];\n  borderOpacity: ThemeConfig["opacity"];\n  borderRadius: ResolvableTo<KeyValuePair>;\n  borderWidth: ResolvableTo<KeyValuePair>;\n\n  // Shadow\n  boxShadow: ResolvableTo<KeyValuePair>;\n\n  // Outline\n  outline: ResolvableTo<KeyValuePair>;\n\n  // Cursor\n  cursor: ResolvableTo<KeyValuePair>;\n\n  // Content\n  content: ResolvableTo<KeyValuePair>;\n\n  // Divider\n  divideColor: ThemeConfig["borderColor"];\n  divideOpacity: ThemeConfig["borderOpacity"];\n  devideWidth: ThemeConfig["borderWidth"];\n\n  // Svg\n  fill: ResolvableTo<KeyValuePair>;\n  stroke: ResolvableTo<KeyValuePair>;\n  strokeWidth: ResolvableTo<KeyValuePair>;\n\n  // Flexbox\n  flex: ResolvableTo<KeyValuePair>;\n  flexGrow: ResolvableTo<KeyValuePair>;\n  flexShrink: ResolvableTo<KeyValuePair>;\n\n  // Fonts\n  fontFamily: ResolvableTo<Record<string, string[]>>;\n  fontSize: ResolvableTo<KeyValuePair>;\n  fontWeight: ResolvableTo<KeyValuePair>;\n\n  // Sizes\n  height: ThemeConfig["spacing"];\n  minHeight: ResolvableTo<KeyValuePair>;\n  maxHeight: ResolvableTo<KeyValuePair>;\n  width: ThemeConfig["spacing"];\n  minWidth: ResolvableTo<KeyValuePair>;\n  maxWidth: ResolvableTo<KeyValuePair>;\n\n  // Positioning\n  inset: ResolvableTo<KeyValuePair>;\n  zIndex: ResolvableTo<KeyValuePair>;\n\n  // Text\n  letterSpacing: ResolvableTo<KeyValuePair>;\n  lineHeight: ResolvableTo<KeyValuePair>;\n  textColor: ThemeConfig["colors"];\n  textOpacity: ThemeConfig["opacity"];\n\n  // Input\n  placeholderColor: ThemeConfig["colors"];\n  placeholderOpacity: ThemeConfig["opacity"];\n  caretColor: ThemeConfig["colors"];\n\n  // Lists\n  listStyleType: ResolvableTo<KeyValuePair>;\n\n  // Layout\n  margin: ThemeConfig["spacing"];\n  padding: ThemeConfig["spacing"];\n  space: ThemeConfig["spacing"];\n  opacity: ResolvableTo<KeyValuePair>;\n  order: ResolvableTo<KeyValuePair>;\n\n  // Images\n  objectPosition: ResolvableTo<KeyValuePair>;\n\n  // Grid\n  gap: ThemeConfig["spacing"];\n  gridTemplateColumns: ResolvableTo<KeyValuePair>;\n  gridColumn: ResolvableTo<KeyValuePair>;\n  gridColumnStart: ResolvableTo<KeyValuePair>;\n  gridColumnEnd: ResolvableTo<KeyValuePair>;\n  gridTemplateRows: ResolvableTo<KeyValuePair>;\n  gridRow: ResolvableTo<KeyValuePair>;\n  gridRowStart: ResolvableTo<KeyValuePair>;\n  gridRowEnd: ResolvableTo<KeyValuePair>;\n\n  // Transformations\n  transformOrigin: ResolvableTo<KeyValuePair>;\n  scale: ResolvableTo<KeyValuePair>;\n  rotate: ResolvableTo<KeyValuePair>;\n  translate: ThemeConfig["spacing"];\n  skew: ResolvableTo<KeyValuePair>;\n\n  // Transitions\n  transitionProperty: ResolvableTo<KeyValuePair>;\n  transitionTimingFunction: ResolvableTo<KeyValuePair>;\n  transitionDuration: ResolvableTo<KeyValuePair>;\n  transitionDelay: ResolvableTo<KeyValuePair>;\n\n  // Animations\n  animation: ResolvableTo<KeyValuePair>;\n  keyframes: ResolvableTo<\n    Record<string, Record<string, KeyValuePair | string>>\n  >;\n\n  // Filters\n  blur: ResolvableTo<Record<string, string | string[]>>;\n  brightness: ResolvableTo<Record<string, string | string[]>>;\n  contrast: ResolvableTo<Record<string, string | string[]>>;\n  dropShadow: ResolvableTo<Record<string, string | string[]>>;\n  grayscale: ResolvableTo<Record<string, string | string[]>>;\n  hueRotate: ResolvableTo<Record<string, string | string[]>>;\n  invert: ResolvableTo<Record<string, string | string[]>>;\n  saturate: ResolvableTo<Record<string, string | string[]>>;\n  sepia: ResolvableTo<Record<string, string | string[]>>;\n  backdropFilter: ResolvableTo<Record<string, string | string[]>>;\n  backdropBlur: ResolvableTo<Record<string, string | string[]>>;\n  backdropBrightness: ResolvableTo<Record<string, string | string[]>>;\n  backdropContrast: ResolvableTo<Record<string, string | string[]>>;\n  backdropGrayscale: ResolvableTo<Record<string, string | string[]>>;\n  backdropHueRotate: ResolvableTo<Record<string, string | string[]>>;\n  backdropInvert: ResolvableTo<Record<string, string | string[]>>;\n  backdropOpacity: ResolvableTo<Record<string, string | string[]>>;\n  backdropSaturate: ResolvableTo<Record<string, string | string[]>>;\n  backdropSepia: ResolvableTo<Record<string, string | string[]>>;\n\n  // Components\n  container: Partial<{\n    screens:\n      | string[] // List of breakpoints. E.g.: \'400px\', \'500px\'\n      // Named breakpoints. E.g.: { sm: \'400px\' }\n      | Record<string, string>\n      // Name breakpoints with explicit min and max values. E.g.: { sm: { min: \'300px\', max: \'400px\' } }\n      | Record<string, { min: string; max: string }>;\n    center: boolean;\n    padding: string | KeyValuePair;\n  }>;\n\n  // Custom\n  [key: string]: any;\n}>;\n\ntype VariantsAPI = {\n  variants: (path: string) => string[];\n  before: (toInsert: string[], variant?: string, existingPluginVariants?: string[]) => string[];\n  after: (toInsert: string[], variant?: string, existingPluginVariants?: string[]) => string[];\n  without: (toRemove: string[], existingPluginVariants?: string[]) => string[];\n}\ntype VariantsConfig =\n  | string[]\n  | Record<string, string[] | ((api: VariantsAPI) => string[])>\n  | { extend: Record<string, string[]> };\n\ntype CorePluginsConfig = string[] | Record<string, boolean>;\n\ntype VariantConfig =\n  | string[]\n  | Partial<{\n      variants: string[];\n      respectPrefix: false;\n      respectImportant: false;\n    }>;\ntype PluginAPI = {\n  // Get access to the whole config\n  config: <TDefaultValue = TailwindConfig>(\n    path?: ConfigDotNotationPath,\n    defaultValue?: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  // Escape classNames\n  e: (className: string) => string;\n  // Shortcut for the theme section of the config\n  theme: <TDefaultValue>(\n    path: ConfigDotNotationPath,\n    defaultValue: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  variants: <TDefaultValue>(\n    path: ConfigDotNotationPath,\n    defaultValue: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  target: (path: ConfigDotNotationPath) => string;\n  prefix: (selector: string) => string;\n  // Ability to add utilities. E.g.: .p-4\n  addUtilities: (\n    utilities: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n    variantConfig?: VariantConfig\n  ) => void;\n  // Ability to add components. E.g.: .btn\n  addComponents: (\n    components: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n    variantConfig?: VariantConfig\n  ) => void;\n  addBase: (\n    base: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n  ) => void;\n  addVariant: (\n    name: string,\n    generator: (api: {\n      container: postcss.Container,\n      separator: string,\n      modifySelectors: (\n        modifierFunction: (\n          api: {\n            className: string\n            selector: string\n          }\n        ) => void\n      ) => void\n    }) => void\n  ) => void;\n  corePlugins: (path: string) => boolean;\n  postcss: typeof postcss;\n};\nexport type PluginCreator = (api: PluginAPI) => void;\ntype PluginsConfig = (PluginCreator | { handler: PluginCreator, config?: TailwindConfig })[];\n\n// The holy grail Tailwind config definition\nexport type TailwindConfig = Partial<\n  BaseConfig & {\n    presets: TailwindConfig[];\n    future: FutureConfig;\n    experimental: ExperimentalConfig;\n    purge: PurgeConfig;\n    darkMode: DarkModeConfig;\n    theme: ThemeConfig;\n    variants: VariantsConfig;\n    corePlugins: CorePluginsConfig;\n    plugins: PluginsConfig;\n    mode: \'jit\' | \'aot\';\n    // Custom\n    [key: string]: any;\n  }\n>;\n',3:'import * as postcss from \'postcss\'\n\ntype KeyValuePair<TKey extends keyof any = string, TValue = string> = Record<\n  TKey,\n  TValue\n>;\n\ntype ConfigUtils = {\n  negative<TInput, TOutput>(input: TInput): TOutput;\n  breakpoints<TInput, TOutput>(input: TInput): TOutput;\n};\n\ntype ConfigDotNotationPath = string;\n\ntype ResolvableTo<TResult> =\n  | TResult\n  | ((\n      theme: (path: ConfigDotNotationPath) => TResult,\n      utils: ConfigUtils\n    ) => TResult);\n\ntype BaseConfig = {\n  important: boolean | string;\n  target: "relaxed" | "ie11";\n  prefix: string | ((className: string) => string);\n  separator: string;\n};\n\ntype ContentConfig =\n  | string[]\n  | {\n    files: string[];\n    safelist?: Array<string | { pattern: RegExp, variants?: string[] }>;\n    transform?: Record<string, (content: string) => string>;\n    extract?: Record<string, (content: string) => string[]>;\n  };\n\ntype FutureConfig = "all" | Record<any, never> | [];\n\ntype ExperimentalConfig =\n  | "all"\n  | Record<any, never>\n  | [];\n\ntype DarkModeConfig =\n  | false\n  | "media"\n  | "class";\n\ntype ThemeConfig = Partial<{\n  extend: Partial<Omit<ThemeConfig, "extend">>;\n\n  // Responsiveness\n  screens: ResolvableTo<KeyValuePair>;\n\n  // Reusable base configs\n  colors: ResolvableTo<\n    KeyValuePair | Record<string, Record<string | number, string>>\n  >;\n  spacing: ResolvableTo<KeyValuePair>;\n\n  // Background\n  backgroundColor: ThemeConfig["colors"];\n  backgroundImage: ResolvableTo<KeyValuePair>;\n  gradientColorStops: ThemeConfig["colors"];\n  backgroundOpacity: ThemeConfig["opacity"];\n  backgroundPosition: ResolvableTo<KeyValuePair>;\n  backgroundSize: ResolvableTo<KeyValuePair>;\n  backgroundOrigin: ResolvableTo<KeyValuePair>;\n\n  // Border\n  borderColor: ThemeConfig["colors"];\n  borderOpacity: ThemeConfig["opacity"];\n  borderRadius: ResolvableTo<KeyValuePair>;\n  borderWidth: ResolvableTo<KeyValuePair>;\n\n  // Shadow\n  boxShadow: ResolvableTo<KeyValuePair>;\n\n  // Outline\n  outline: ResolvableTo<KeyValuePair>;\n\n  // Cursor\n  cursor: ResolvableTo<KeyValuePair>;\n\n  // Content\n  content: ResolvableTo<KeyValuePair>;\n\n  // Divider\n  divideColor: ThemeConfig["borderColor"];\n  divideOpacity: ThemeConfig["borderOpacity"];\n  devideWidth: ThemeConfig["borderWidth"];\n\n  // Svg\n  fill: ResolvableTo<KeyValuePair>;\n  stroke: ResolvableTo<KeyValuePair>;\n  strokeWidth: ResolvableTo<KeyValuePair>;\n\n  // Flexbox\n  flex: ResolvableTo<KeyValuePair>;\n  flexGrow: ResolvableTo<KeyValuePair>;\n  flexShrink: ResolvableTo<KeyValuePair>;\n\n  // Fonts\n  fontFamily: ResolvableTo<Record<string, string[]>>;\n  fontSize: ResolvableTo<KeyValuePair>;\n  fontWeight: ResolvableTo<KeyValuePair>;\n\n  // Sizes\n  height: ThemeConfig["spacing"];\n  minHeight: ResolvableTo<KeyValuePair>;\n  maxHeight: ResolvableTo<KeyValuePair>;\n  width: ThemeConfig["spacing"];\n  minWidth: ResolvableTo<KeyValuePair>;\n  maxWidth: ResolvableTo<KeyValuePair>;\n  aspectRatio: ResolvableTo<KeyValuePair>;\n\n  // Positioning\n  inset: ResolvableTo<KeyValuePair>;\n  zIndex: ResolvableTo<KeyValuePair>;\n\n  // Text\n  letterSpacing: ResolvableTo<KeyValuePair>;\n  lineHeight: ResolvableTo<KeyValuePair>;\n  textColor: ThemeConfig["colors"];\n  textOpacity: ThemeConfig["opacity"];\n  textIndent: ThemeConfig["spacing"];\n\n  // Input\n  placeholderColor: ThemeConfig["colors"];\n  placeholderOpacity: ThemeConfig["opacity"];\n  caretColor: ThemeConfig["colors"];\n\n  // Lists\n  listStyleType: ResolvableTo<KeyValuePair>;\n\n  // Layout\n  margin: ThemeConfig["spacing"];\n  padding: ThemeConfig["spacing"];\n  space: ThemeConfig["spacing"];\n  opacity: ResolvableTo<KeyValuePair>;\n  order: ResolvableTo<KeyValuePair>;\n  columns: ResolvableTo<KeyValuePair>;\n\n  // Images\n  objectPosition: ResolvableTo<KeyValuePair>;\n\n  // Grid\n  gap: ThemeConfig["spacing"];\n  gridTemplateColumns: ResolvableTo<KeyValuePair>;\n  gridColumn: ResolvableTo<KeyValuePair>;\n  gridColumnStart: ResolvableTo<KeyValuePair>;\n  gridColumnEnd: ResolvableTo<KeyValuePair>;\n  gridTemplateRows: ResolvableTo<KeyValuePair>;\n  gridRow: ResolvableTo<KeyValuePair>;\n  gridRowStart: ResolvableTo<KeyValuePair>;\n  gridRowEnd: ResolvableTo<KeyValuePair>;\n\n  // Transformations\n  transformOrigin: ResolvableTo<KeyValuePair>;\n  scale: ResolvableTo<KeyValuePair>;\n  rotate: ResolvableTo<KeyValuePair>;\n  translate: ThemeConfig["spacing"];\n  skew: ResolvableTo<KeyValuePair>;\n\n  // Transitions\n  transitionProperty: ResolvableTo<KeyValuePair>;\n  transitionTimingFunction: ResolvableTo<KeyValuePair>;\n  transitionDuration: ResolvableTo<KeyValuePair>;\n  transitionDelay: ResolvableTo<KeyValuePair>;\n  willChange: ResolvableTo<KeyValuePair>;\n\n  // Animations\n  animation: ResolvableTo<KeyValuePair>;\n  keyframes: ResolvableTo<\n    Record<string, Record<string, KeyValuePair | string>>\n  >;\n\n  // Filters\n  blur: ResolvableTo<Record<string, string | string[]>>;\n  brightness: ResolvableTo<Record<string, string | string[]>>;\n  contrast: ResolvableTo<Record<string, string | string[]>>;\n  dropShadow: ResolvableTo<Record<string, string | string[]>>;\n  grayscale: ResolvableTo<Record<string, string | string[]>>;\n  hueRotate: ResolvableTo<Record<string, string | string[]>>;\n  invert: ResolvableTo<Record<string, string | string[]>>;\n  saturate: ResolvableTo<Record<string, string | string[]>>;\n  sepia: ResolvableTo<Record<string, string | string[]>>;\n  backdropFilter: ResolvableTo<Record<string, string | string[]>>;\n  backdropBlur: ResolvableTo<Record<string, string | string[]>>;\n  backdropBrightness: ResolvableTo<Record<string, string | string[]>>;\n  backdropContrast: ResolvableTo<Record<string, string | string[]>>;\n  backdropGrayscale: ResolvableTo<Record<string, string | string[]>>;\n  backdropHueRotate: ResolvableTo<Record<string, string | string[]>>;\n  backdropInvert: ResolvableTo<Record<string, string | string[]>>;\n  backdropOpacity: ResolvableTo<Record<string, string | string[]>>;\n  backdropSaturate: ResolvableTo<Record<string, string | string[]>>;\n  backdropSepia: ResolvableTo<Record<string, string | string[]>>;\n\n  // Components\n  container: Partial<{\n    screens:\n      | string[] // List of breakpoints. E.g.: \'400px\', \'500px\'\n      // Named breakpoints. E.g.: { sm: \'400px\' }\n      | Record<string, string>\n      // Name breakpoints with explicit min and max values. E.g.: { sm: { min: \'300px\', max: \'400px\' } }\n      | Record<string, { min: string; max: string }>;\n    center: boolean;\n    padding: string | KeyValuePair;\n  }>;\n\n  // Custom\n  [key: string]: any;\n}>;\n\ntype VariantsAPI = {\n  variants: (path: string) => string[];\n  before: (toInsert: string[], variant?: string, existingPluginVariants?: string[]) => string[];\n  after: (toInsert: string[], variant?: string, existingPluginVariants?: string[]) => string[];\n  without: (toRemove: string[], existingPluginVariants?: string[]) => string[];\n}\ntype VariantsConfig =\n  | string[]\n  | Record<string, string[] | ((api: VariantsAPI) => string[])>\n  | { extend: Record<string, string[]> };\n\ntype CorePluginsConfig = string[] | Record<string, boolean>;\n\ntype VariantConfig =\n  | string[]\n  | Partial<{\n      variants: string[];\n      respectPrefix: false;\n      respectImportant: false;\n    }>;\ntype ValueType = \'any\' | \'color\' | \'url\' | \'image\' | \'length\' | \'percentage\' | \'position\' | \'lookup\' | \'generic-name\' | \'family-name\' | \'number\' | \'line-width\' | \'absolute-size\' | \'relative-size\';\ntype VariantDefinition =\n  | string\n  | ((api: {\n      container: postcss.Container\n      separator: string\n      modifySelectors: (\n        modifierFunction: (api: { className: string; selector: string }) => void\n      ) => void\n    }) => string | null | void)\ntype PluginAPI = {\n  // Get access to the whole config\n  config: <TDefaultValue = TailwindConfig>(\n    path?: ConfigDotNotationPath,\n    defaultValue?: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  // Escape classNames\n  e: (className: string) => string;\n  // Shortcut for the theme section of the config\n  theme: <TDefaultValue>(\n    path: ConfigDotNotationPath,\n    defaultValue: TDefaultValue\n  ) => TDefaultValue; // TODO: Or return value at path\n  target: (path: ConfigDotNotationPath) => string;\n  prefix: (selector: string) => string;\n  // Ability to add utilities. E.g.: .p-4\n  addUtilities: (\n    utilities: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n    variantConfig?: VariantConfig\n  ) => void;\n  // Ability to add components. E.g.: .btn\n  addComponents: (\n    components: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n    variantConfig?: VariantConfig\n  ) => void;\n  addBase: (\n    base: Record<string, KeyValuePair | Record<string, KeyValuePair>>,\n  ) => void;\n  addVariant: (\n    name: string,\n    definition: VariantDefinition | Array<VariantDefinition>\n  ) => void;\n  matchUtilities: <T>(\n    utilities: Record<string, (value: T) => Record>,\n    options?: Partial<{\n      values: Record<string, T>,\n      type: ValueType | Array<ValueType>,\n      respectPrefix: boolean,\n      respectImportant: boolean,\n      respectVariants: boolean,\n    }>\n  ) => void;\n  corePlugins: (path: string) => boolean;\n  postcss: typeof postcss;\n};\nexport type PluginCreator = (api: PluginAPI) => void;\ntype PluginsConfig = (PluginCreator | { handler: PluginCreator, config?: TailwindConfig })[];\n\n// The holy grail Tailwind config definition\nexport type TailwindConfig = Partial<\n  BaseConfig & {\n    presets: TailwindConfig[];\n    future: FutureConfig;\n    experimental: ExperimentalConfig;\n    content: ContentConfig;\n    darkMode: DarkModeConfig;\n    theme: ThemeConfig;\n    corePlugins: CorePluginsConfig;\n    plugins: PluginsConfig;\n    // Custom\n    [key: string]: any;\n  }\n>;\n'};function te(e,n){for(var t,r=("string"===typeof e?e:e.getValue()).split("\n"),i=0;i<r.length;i++)if(/^(\s*)module\.exports(\s*=)/.test(r[i])){t=i+1;break}return"undefined"===typeof t||n.lineNumber<t?0:1}function re(e){return e.replace(/^(\s*)module\.exports(\s*=)/m,'$1/** @type {import("tailwindcss").TailwindConfig} */\nconst _exports$2')+"\n;_exports"}var ie=t(8873),oe=t(9808),ae=t.n(oe),se=t(6905),le=t.n(se);function ue(e,n,t,r,i,o,a){try{var s=e[o](a),l=s.value}catch(u){return void t(u)}s.done?n(l):Promise.resolve(l).then(r,i)}function ce(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(t.push(a.value),!n||t.length!==n);r=!0);}catch(l){i=!0,o=l}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function ge(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function de(e){var n,t=ce(e.split("/"),2),r=t[0],i=t[1],o=void 0===i?1:i;return le()(ae(),r).replace("#","")+(n=Math.round(255*parseFloat(o)),Number(n).toString(16).padStart(2,"0"))}function pe(e){return Object.entries(e).map((function(e){var n=ce(e,2);return{token:n[0],foreground:de(n[1])}}))}function fe(e){var n,r=e.container,i=e.initialContent,o=e.onChange,c=e.worker,g=e.tailwindVersion,d=function(e,n,t){var r,o,a,s,l,u;p&&m&&p(e,{html:"html"===e&&"undefined"!==typeof n?n:null!==(s=null===(r=v.getModel())||void 0===r?void 0:r.getValue())&&void 0!==s?s:i.html,css:"css"===e&&"undefined"!==typeof n?n:null!==(l=null===(o=b.getModel())||void 0===o?void 0:o.getValue())&&void 0!==l?l:i.css,config:"config"===e&&"undefined"!==typeof n?n:null!==(u=null===(a=y.getModel())||void 0===a?void 0:a.getValue())&&void 0!==u?u:i.config},t)},p=o,f=[],m=!0;window.MonacoEnvironment={getWorkerUrl:function(e,n){var r="?v=".concat(t(4438).i);return"css"===n||"tailwindcss"===n?"_next/static/chunks/css.worker.js".concat(r):"html"===n?"_next/static/chunks/html.worker.js".concat(r):"typescript"===n||"javascript"===n?"_next/static/chunks/ts.worker.js".concat(r):"_next/static/chunks/editor.worker.js".concat(r)}},f.push(function(e){var n=[],t={provideDocumentFormattingEdits:function(n,t,r){return(i=a().mark((function t(){var r,i;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,l.L)(e.current,{prettier:{text:n.getValue(),language:n.getLanguageId()}});case 2:if(r=t.sent,i=r.result,!r.error){t.next=7;break}return t.abrupt("return",[]);case 7:return t.abrupt("return",[{range:n.getFullModelRange(),text:i}]);case 8:case"end":return t.stop()}}),t)})),function(){var e=this,n=arguments;return new Promise((function(t,r){var o=i.apply(e,n);function a(e){ue(o,t,r,a,s,"next",e)}function s(e){ue(o,t,r,a,s,"throw",e)}a(void 0)}))})();var i}},r=s.languages.registerDocumentFormattingEditProvider;return s.languages.registerDocumentFormattingEditProvider=function(e,n){return"html"!==e?r(e,n):r("html",t)},n.push(s.languages.registerDocumentFormattingEditProvider("tailwindcss",t)),n.push(s.languages.registerDocumentFormattingEditProvider("javascript",t)),{dispose:function(){n.forEach((function(e){return e.dispose()}))}}}(c));var v=N(i.html,(function(e,n){d("html",e,n)}),c,(function(){return n}));f.push(v);var b=B(i.css,(function(){d("css")}),c,(function(){return n}));f.push(b);var y=function(e,n,t,r){var i,o=[],a=r;return{getModel:function(){return i},activate:function(){if(!i){var r=q.DiagnosticsAdapter.prototype._doValidate;q.DiagnosticsAdapter.prototype._doValidate=function(e){return r.bind(this)(e===i?u:e)},o.push({dispose:function(){q.DiagnosticsAdapter.prototype._doValidate=r}});var l=s.editor.setModelMarkers;s.editor.setModelMarkers=function(e,n,t){return l(e===u?i:e,n,e===u?t.map((function(e){var n=te(i,{lineNumber:e.startLineNumber});return Y({},e,{startLineNumber:e.startLineNumber-n,endLineNumber:e.endLineNumber-n,relatedInformation:[]})})):t)},o.push({dispose:function(){s.editor.setModelMarkers=l}}),s.languages.typescript.javascriptDefaults.setDiagnosticsOptions({noSemanticValidation:!1,noSyntaxValidation:!1,noSuggestionDiagnostics:!1,diagnosticCodesToIgnore:[80001,2307]}),s.languages.typescript.javascriptDefaults.setCompilerOptions({allowJs:!0,allowNonTsExtensions:!0,module:1,target:99,checkJs:!0,moduleResolution:s.languages.typescript.ModuleResolutionKind.NodeJs,typeRoots:["node_modules/@types"]}),o.push(s.languages.typescript.javascriptDefaults.addExtraLib(J.Z,"file:///node_modules/@types/source-map-js/index.d.ts")),o.push(s.languages.typescript.javascriptDefaults.addExtraLib(Q.Z,"file:///node_modules/@types/postcss/index.d.ts")),o.push(s.languages.typescript.javascriptDefaults.addExtraLib(ne[a],"file:///node_modules/@types/tailwindcss/index.d.ts")),o.push(s.languages.typescript.javascriptDefaults.addExtraLib("\n              import { TailwindConfig, PluginCreator } from 'tailwindcss';\n              function createPlugin (plugin: PluginCreator, config?: TailwindConfig): {\n                handler: PluginCreator,\n                config: TailwindConfig\n              };\n              export = createPlugin;\n            ","file:///node_modules/@types/tailwindcss/plugin.d.ts")),(i=s.editor.createModel(e||"","javascript",s.Uri.parse("file:///Config"))).updateOptions({indentSize:2,tabSize:2}),o.push(i);var u=s.editor.createModel(re(e||""),"javascript","file:///Config.proxy");u.updateOptions({indentSize:2,tabSize:2}),o.push(u),o.push(i.onDidChangeContent((function(){n(),u.setValue(re(i.getValue()))})));var c=q.QuickInfoAdapter.prototype.provideHover;q.QuickInfoAdapter.prototype.provideHover=function(e,n){for(var t=arguments.length,r=new Array(t>2?t-2:0),o=2;o<t;o++)r[o-2]=arguments[o];this._provideHover||(this._provideHover=c.bind(this));var a=e===i?te(i,n):0;return this._provideHover.apply(this,[e===i?u:e,e===i?n.delta(a):n].concat(ee(r))).then((function(e){var n;if(e&&!(null===(n=e.contents[e.contents.length-1].value)||void 0===n?void 0:n.trim().startsWith('*@type* \u2014 {import("tailwindcss')))return Y({},e,{range:new s.Range(e.range.startLineNumber-a,e.range.startColumn,e.range.endLineNumber-a,e.range.endColumn)})}))},o.push({dispose:function(){q.QuickInfoAdapter.prototype.provideHover=c}});var g=q.SuggestAdapter.prototype.provideCompletionItems;q.SuggestAdapter.prototype.provideCompletionItems=function(e,n){for(var t=arguments.length,r=new Array(t>2?t-2:0),o=2;o<t;o++)r[o-2]=arguments[o];this._provideCompletionItems||(this._provideCompletionItems=g.bind(this));var a=e===i?te(i,n):0;return this._provideCompletionItems.apply(this,[e===i?u:e,e===i?n.delta(a):n].concat(ee(r))).then((function(n){return n?{suggestions:e===i?n.suggestions.map((function(e){return Y({},e,{uri:i.uri,range:new s.Range(e.range.startLineNumber-a,e.range.startColumn,e.range.endLineNumber-a,e.range.endColumn)})})):n.suggestions}:n}))},o.push({dispose:function(){q.SuggestAdapter.prototype.provideCompletionItems=g}})}t().setModel(i)},dispose:function(){o.forEach((function(e){return e.dispose()}))},setTailwindVersion:function(e){a=e,i&&o.push(s.languages.typescript.javascriptDefaults.addExtraLib(ne[a],"file:///node_modules/@types/tailwindcss/index.d.ts"))}}}(i.config,(function(){d("config")}),(function(){return n}),g);f.push(y),s.editor.defineTheme("tw-light",{base:"vs",inherit:!0,rules:[{foreground:de("gray.800")}].concat(ge(pe({comment:"gray.400",string:"indigo.600",number:"gray.800",tag:"sky.600",delimiter:"gray.400","attribute.name.html":"sky.500","attribute.value.html":"indigo.600","delimiter.html":"gray.400","keyword.js":"sky.600","identifier.js":"gray.800","attribute.name.css":"indigo.600","attribute.value.unit.css":"teal.600","attribute.value.number.css":"gray.800","attribute.value.css":"gray.800","attribute.value.hex.css":"gray.800","keyword.css":"sky.600","function.css":"teal.600","pseudo.css":"sky.600","variable.css":"gray.800"}))),colors:{"editor.background":"#ffffff","editor.selectionBackground":"#"+de("slate.200"),"editor.inactiveSelectionBackground":"#"+de("slate.200/0.4"),"editorLineNumber.foreground":"#"+de("gray.400"),"editor.lineHighlightBorder":"#"+de("slate.100"),"editorBracketMatch.background":"#00000000","editorBracketMatch.border":"#"+de("slate.300"),"editorSuggestWidget.background":"#"+de("slate.50"),"editorSuggestWidget.selectedBackground":"#"+de("slate.400/0.1"),"editorSuggestWidget.selectedForeground":"#"+de("slate.700"),"editorSuggestWidget.foreground":"#"+de("slate.700"),"editorSuggestWidget.highlightForeground":"#"+de("indigo.500"),"editorSuggestWidget.focusHighlightForeground":"#"+de("indigo.500"),"editorHoverWidget.background":"#"+de("slate.50"),"editorError.foreground":"#"+de("red.500"),"editorWarning.foreground":"#"+de("yellow.500")}}),s.editor.defineTheme("tw-dark",{base:"vs-dark",inherit:!0,rules:[{foreground:de("slate.50")}].concat(ge(pe({comment:"slate.400",string:"sky.300",number:"slate.50",tag:"pink.400",delimiter:"slate.500","attribute.name.html":"slate.300","attribute.value.html":"sky.300","delimiter.html":"slate.500","keyword.js":"slate.300","identifier.js":"slate.50","attribute.name.css":"sky.300","attribute.value.unit.css":"teal.200","attribute.value.number.css":"slate.50","attribute.value.css":"slate.50","attribute.value.hex.css":"slate.50","keyword.css":"slate.300","function.css":"teal.200","pseudo.css":"slate.300","variable.css":"slate.50"}))),colors:{"editor.background":"#"+de("slate.800"),"editor.selectionBackground":"#"+de("slate.700"),"editor.inactiveSelectionBackground":"#"+de("slate.700/0.6"),"editorLineNumber.foreground":"#"+de("slate.600"),"editor.lineHighlightBorder":"#"+de("slate.700"),"editorBracketMatch.background":"#00000000","editorBracketMatch.border":"#"+de("slate.500"),"editorSuggestWidget.background":"#"+de("slate.700"),"editorSuggestWidget.selectedBackground":"#"+de("slate.400/0.12"),"editorSuggestWidget.foreground":"#"+de("slate.300"),"editorSuggestWidget.selectedForeground":"#"+de("slate.300"),"editorSuggestWidget.highlightForeground":"#"+de("sky.400"),"editorSuggestWidget.focusHighlightForeground":"#"+de("sky.400"),"editorHoverWidget.background":"#"+de("slate.700"),"editorError.foreground":"#"+de("red.400"),"editorWarning.foreground":"#"+de("yellow.400")}}),n=s.editor.create(r,{fontFamily:'Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',fontSize:14,lineHeight:21,minimap:{enabled:!1},theme:"dark"===(0,ie.gh)()?"tw-dark":"tw-light",fixedOverflowWidgets:!0,scrollbar:{horizontalScrollbarSize:21}}),f.push(n),function(e){var n="editor.action.formatDocument";e._standaloneKeybindingService.addDynamicKeybinding("-".concat(n),null,(function(){}));var t=u.P0.getCommand(n),r=t.handler,i=t.when;e._standaloneKeybindingService.addDynamicKeybinding(n,s.KeyMod.CtrlCmd|s.KeyCode.KeyS,r,i)}(n),c.current.addEventListener("message",(function(e){if(e.data.css){var t=n.getModel();t===v.getModel()?v.updateDecorations():t===b.getModel()&&b.updateDecorations()}}));var h=!0;n.onDidChangeModel((function(){if(h)h=!1;else{var e=n.getModel();e===v.getModel()?v.updateDecorations():e===b.getModel()&&b.updateDecorations()}}));var T={html:v,css:b,config:y};return{editor:n,documents:T,getValue:function(e){var n,t;return null!==(t=null===(n=T[e].getModel())||void 0===n?void 0:n.getValue())&&void 0!==t?t:i[e]},reset:function(e){m=!1,i=e,T.html.getModel()&&T.html.getModel().setValue(e.html),T.css.getModel()&&T.css.getModel().setValue(e.css),T.config.getModel()&&T.config.getModel().setValue(e.config),window.setTimeout((function(){m=!0}),0)},setTailwindVersion:function(e){y.setTailwindVersion(e)},dispose:function(){f.forEach((function(e){return e.dispose()}))},setOnChange:function(e){p=e}}}var me=t(5884),ve=t(6010),be=t(1816),ye=t(8125);function he(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Te(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){he(e,n,t[n])}))}return e}function Re(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(t.push(a.value),!n||t.length!==n);r=!0);}catch(l){i=!0,o=l}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Ce(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function xe(e){var n=e.initialContent,t=void 0===n?{}:n,o=e.onChange,a=e.worker,l=e.activeTab,u=e.editorRef,c=e.cssOutputEditorRef,g=e.tailwindVersion,d=e.onFilterCssOutput,p=e.cssOutputFilter,f=e.initialCssOutput,m=void 0===f?"":f,v=(0,i.useRef)(),b=(0,i.useRef)(),y=(0,i.useRef)({}),h=(0,i.useRef)(),T=(0,i.useRef)(),R=48,C=(0,i.useState)({current:R}),x=C[0],k=C[1],P=(0,i.useState)(!1),V=P[0],w=P[1],K=(0,i.useState)(!1),S=K[0],O=K[1],D=(0,i.useState)(!1),M=D[0],I=D[1],E=(0,i.useState)(0),j=E[0],N=E[1];(0,i.useEffect)((function(){var e=fe({container:v.current,initialContent:t,onChange:o,worker:a,tailwindVersion:g});return b.current=e,u(e),function(){b.current.dispose()}}),[]),(0,i.useEffect)((function(){var e=s.editor.create(h.current,{fontFamily:'Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',fontSize:14,lineHeight:21,minimap:{enabled:!1},theme:"dark"===(0,ie.gh)()?"tw-dark":"tw-light",fixedOverflowWidgets:!0,readOnly:!0,language:"tailwindcss",value:(0,ye.Q)(m,p),renderLineHighlight:!1,padding:{top:49}});T.current=e,c(e);var n=new ResizeObserver((function(){e.layout()}));return n.observe(h.current),function(){n.disconnect(),e.dispose()}}),[]),(0,i.useEffect)((function(){b.current.setOnChange(o)}),[o]);var A=(0,i.useRef)(!0);return(0,i.useEffect)((function(){A.current?A.current=!1:b.current.reset(t)}),[t]),(0,i.useEffect)((function(){b.current.setTailwindVersion(g)}),[g]),(0,i.useEffect)((function(){var e=(0,ie.GT)((function(e){s.editor.setTheme("dark"===e?"tw-dark":"tw-light")}));return function(){return e()}}),[]),(0,i.useEffect)((function(){var e=new ResizeObserver((function(){b.current.editor.layout()}));return e.observe(v.current),function(){e.disconnect()}}),[]),(0,i.useEffect)((function(){var e=b.current,n=e.editor,t=e.documents,r=n.saveViewState(),i=n.getModel();i===t.html.getModel()?y.current.html=r:i===t.css.getModel()?y.current.css=r:i===t.config.getModel()&&(y.current.config=r),t[l].activate(),n.restoreViewState(y.current[l]),n.focus()}),[l]),(0,i.useEffect)((function(){x.current>R&&!V?w(!0):x.current<=R&&V&&w(!1)}),[x.current,V]),(0,i.useEffect)((function(){if(0!==j){var e=window.setTimeout((function(){N(0)}),1500);return function(){window.clearTimeout(e)}}}),[j]),(0,r.jsx)("div",{className:"mt-12 relative flex-auto",children:(0,r.jsxs)(me.Z,{split:"horizontal",size:x.current,minSize:R,maxSize:-1,onChange:function(e){return k(Te({},x,{current:e}))},primary:"second",pane1Style:{display:"flex",flexDirection:"column"},resizerStyle:{zIndex:10,background:"none"},children:[(0,r.jsx)("div",{className:"border-t border-gray-200 dark:border-white/10 flex-auto flex -mb-2",children:(0,r.jsxs)("div",{className:"relative flex-auto",onMouseMove:function(){S||O(!0)},onMouseLeave:function(){return O(!1)},onKeyDownCapture:function(){S&&O(!1)},children:[(0,r.jsx)("div",{ref:v,className:"absolute inset-0 w-full h-full"}),(0,r.jsx)(ke,{editorRef:b,className:"absolute top-2.5 right-[calc(14px+0.625rem)]",isVisible:S})]})}),(0,r.jsxs)("div",{className:"flex-auto flex flex-col ring-1 ring-gray-900/[0.07] rounded-t-lg overflow-hidden dark:rounded-none dark:ring-0 shadow-[0_2px_11px_rgba(0,0,0,0.1),0_3px_6px_rgba(0,0,0,0.05)]",children:[(0,r.jsxs)("button",{type:"button",className:"flex-none group h-12 px-6 text-left text-sm leading-6 bg-white font-semibold focus:outline-none text-gray-700 hover:text-gray-900 dark:bg-gray-900 dark:text-gray-300 dark:hover:text-white flex items-center justify-between border-y border-t-transparent border-b-gray-900/10 dark:bg-gradient-to-b dark:from-[#242F41] dark:to-gray-800 dark:shadow-highlight/4 dark:ring-1 dark:ring-inset dark:ring-white/[0.08] dark:rounded-t-lg dark:border-0",onClick:function(){x.current<=R?k(Te({},x,{current:300})):k(Te({},x,{current:R}))},children:["Generated CSS",(0,r.jsx)("svg",{className:(0,ve.Z)("w-6 h-6 text-gray-600 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-gray-200",!V&&"rotate-180"),fill:"none",viewBox:"0 0 24 24",children:(0,r.jsx)("path",{d:"m17 10-5 5-5-5",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})]}),(0,r.jsxs)("div",{className:(0,ve.Z)("relative flex-auto",!V&&"hidden"),onMouseMove:function(){M||I(!0)},onMouseLeave:function(){return I(!1)},children:[(0,r.jsxs)("div",{className:"absolute z-10 bg-white/80 backdrop-blur top-0 left-0 right-[14px] select-none flex pl-6 pr-2.5 py-2.5 border-t border-gray-900/[0.03] dark:bg-gray-800/80 justify-between",children:[(0,r.jsx)("div",{className:"flex space-x-3",children:[["All"],["Base","base"],["Components","components"],["Utilities","utilities"]].map((function(e,n){var t=Re(e,2),i=t[0],o=t[1];return(0,r.jsx)("button",{type:"button",className:(0,ve.Z)("rounded-full text-xs leading-6 py-0.5 px-3 font-semibold",p.includes(o)||0===n&&0===p.length?"bg-sky-50 text-sky-500 dark:bg-gray-100/[0.08] dark:text-white":"text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"),onClick:function(e){0===n?d([]):e.metaKey?p.includes(o)?d(p.filter((function(e){return e!==o}))):d(Ce(p).concat([o])):d([o])},children:i},i)}))}),(0,r.jsx)(ke,{editorRef:T,className:"relative",isVisible:M})]}),(0,r.jsx)("div",{ref:h,className:"absolute inset-0 w-full h-full css-output-editor"})]})]})]})})}function ke(e){var n=e.editorRef,t=e.className,o=e.isVisible,a=(0,i.useState)(0),s=a[0],l=a[1];return(0,i.useEffect)((function(){if(0!==s){var e=window.setTimeout((function(){l(0)}),1500);return function(){window.clearTimeout(e)}}}),[s]),(0,r.jsxs)("button",{type:"button",className:(0,ve.Z)("rounded-full bg-gray-50 text-gray-500 text-xs font-semibold leading-6 py-0.5 pl-2 pr-2.5 flex items-center hover:bg-gray-100 transition-opacity select-none dark:bg-gray-700 dark:text-gray-400 dark:hover:bg-gray-600",!o&&"opacity-0 pointer-events-none focus:opacity-100 focus:pointer-events-auto",t),onClick:function(){navigator.clipboard.writeText((n.current.editor||n.current).getModel().getValue()||"\n").then((function(){l((function(e){return e+1}))})).finally((function(){n.current.focus()}))},children:[(0,r.jsxs)("svg",{viewBox:"0 0 20 20",className:(0,ve.Z)("w-5 h-5 text-gray-400 flex-none mr-1",s>0&&"opacity-0"),fill:"none",stroke:"currentColor",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round","aria-hidden":"true",children:[(0,r.jsx)("path",{d:"M7 4.75H5.75a2 2 0 0 0-2 2v8.5a2 2 0 0 0 2 2h8.5a2 2 0 0 0 2-2v-8.5a2 2 0 0 0-2-2H13"}),(0,r.jsx)("path",{d:"M12 6.25H8a1 1 0 0 1-1-1v-1.5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v1.5a1 1 0 0 1-1 1ZM7.75 10.25h4.5M7.75 13.25h4.5"})]}),(0,r.jsxs)("span",{className:(0,ve.Z)(s>0&&"opacity-0"),children:["Copy",(0,r.jsx)("span",{className:"sr-only",children:", then focus editor"})]}),s>0&&(0,r.jsx)(be.Z,{className:"absolute inset-0 flex items-center justify-center",children:"Copied!"})]})}}}]);